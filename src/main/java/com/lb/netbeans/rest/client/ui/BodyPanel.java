/*
 * Copyright 2022 Javier Llorente <javier@opensuse.org>.
 * Copyright 2025        Luca Bartoli <lbdevweb@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.lb.netbeans.rest.client.ui;

import java.awt.CardLayout;
import java.awt.event.ActionListener;
import javax.swing.event.DocumentListener;
import javax.swing.text.StyledEditorKit;

/**
 *
 * @author Javier Llorente 
 * @author Luca Bartoli <lbdevweb@gmail.com>
 */
public class BodyPanel extends javax.swing.JPanel {

    /**
     * Creates new form BodyPanel
     */
    public BodyPanel() {
        initComponents();
    }
    
    // Aggiungere questi metodi
    public void addDocumentListener(DocumentListener dl) {
        editorPane.getDocument().addDocumentListener(dl);
    }
    
    public void addBodyTypeChangeListener(ActionListener listener) {
        bodyComboBox.addActionListener(listener);
    }
    
    public String getBodyType() {
        return bodyComboBox.getSelectedItem().toString();
    }
    
    public void setBodyType(String bodyType) {
        bodyComboBox.setSelectedItem(bodyType);
    }
    
    public String getBody() {
        return editorPane.getText();
    }
    
    public void setBody(String body) {
        editorPane.setText(body);
    }
    
    public void setComboBoxEnabled(boolean enable) {
        bodyComboBox.setEnabled(enable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyComboBox = new javax.swing.JComboBox<>();
        bodyTypePanel = new javax.swing.JPanel();
        nonePanel = new javax.swing.JPanel();
        rawBodyPanel = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        editorPane = new javax.swing.JEditorPane();

        setPreferredSize(new java.awt.Dimension(800, 144));

        bodyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Text", "JSON", "XML" }));
        bodyComboBox.setEnabled(false);
        bodyComboBox.setPreferredSize(new java.awt.Dimension(88, 22));
        bodyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bodyComboBoxActionPerformed(evt);
            }
        });

        bodyTypePanel.setPreferredSize(new java.awt.Dimension(200, 100));
        bodyTypePanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout nonePanelLayout = new javax.swing.GroupLayout(nonePanel);
        nonePanel.setLayout(nonePanelLayout);
        nonePanelLayout.setHorizontalGroup(
            nonePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
        );
        nonePanelLayout.setVerticalGroup(
            nonePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 138, Short.MAX_VALUE)
        );

        bodyTypePanel.add(nonePanel, "None");

        editorPane.setEditorKit(new StyledEditorKit());
        scrollPane.setViewportView(editorPane);

        javax.swing.GroupLayout rawBodyPanelLayout = new javax.swing.GroupLayout(rawBodyPanel);
        rawBodyPanel.setLayout(rawBodyPanelLayout);
        rawBodyPanelLayout.setHorizontalGroup(
            rawBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
        );
        rawBodyPanelLayout.setVerticalGroup(
            rawBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );

        bodyTypePanel.add(rawBodyPanel, "Raw");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bodyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(bodyTypePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bodyTypePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bodyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(116, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bodyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bodyComboBoxActionPerformed
        CardLayout cardLayout = (CardLayout) bodyTypePanel.getLayout();
        
        String selectedItem = bodyComboBox.getSelectedItem().toString();
        
        if (selectedItem.equals("Text") || selectedItem.equals("JSON") || selectedItem.equals("XML")) {
            selectedItem = "Raw";
        }
        
        cardLayout.show(bodyTypePanel, selectedItem);
    }//GEN-LAST:event_bodyComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bodyComboBox;
    private javax.swing.JPanel bodyTypePanel;
    private javax.swing.JEditorPane editorPane;
    private javax.swing.JPanel nonePanel;
    private javax.swing.JPanel rawBodyPanel;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
