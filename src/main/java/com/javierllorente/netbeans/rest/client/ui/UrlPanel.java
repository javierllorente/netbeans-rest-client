/*
 * Copyright 2022 Javier Llorente <javier@opensuse.org>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.javierllorente.netbeans.rest.client.ui;

import java.awt.event.ActionListener;
import java.awt.event.FocusListener;
import java.awt.event.KeyListener;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Javier Llorente <javier@opensuse.org>
 */
public class UrlPanel extends javax.swing.JPanel {

    /**
     * Creates new form UrlPanel
     */
    public UrlPanel() {
        initComponents();
    }

    public String getUrl() {
        return urlTextField.getText();
    }

    public void setUrl(String url) {
        urlTextField.setText(url);
    }

    public String getDisplayUrl() {
        String url = urlTextField.getText();
        if (url.length() > 19) {
            url = url.substring(0, 20) + "...";
        }
        return url;
    }

    public void addUrlDocumentListener(DocumentListener dl) {
        urlTextField.getDocument().addDocumentListener(dl);
    }

    public void removeUrlDocumentListener(DocumentListener dl) {
        urlTextField.getDocument().removeDocumentListener(dl);
    }

    public void addUrlFocusListener(FocusListener fl) {
        urlTextField.addFocusListener(fl);
    }

    public void requestUrlFocus() {
        SwingUtilities.invokeLater(() -> {
            urlTextField.requestFocus();
        });
    }

    public String getRequestMethod() {
        return methodComboBox.getSelectedItem().toString();
    }

    public void setRequestMethod(String method) {
        methodComboBox.setSelectedItem(method);
    }
    
    public void addRequestMethodActionListener(ActionListener al) {
        methodComboBox.addActionListener(al);
    }

    public void addSendButtonActionListener(ActionListener al) {
        sendButton.addActionListener(al);
    }

    public void addComboBoxActionListener(ActionListener al) {
        methodComboBox.addActionListener(al);
    }

    public void addUrlKeyListener(KeyListener kl) {
        urlTextField.addKeyListener(kl);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        methodComboBox = new javax.swing.JComboBox<>();
        urlTextField = new javax.swing.JTextField();
        urlTextField.putClientProperty("JTextField.selectAllOnFocusPolicy", "never");
        sendButton = new javax.swing.JButton();

        methodComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GET", "POST", "PUT", "PATCH", "DELETE" }));

        org.openide.awt.Mnemonics.setLocalizedText(sendButton, "Send");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(methodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(urlTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(methodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(urlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendButton))
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> methodComboBox;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextField urlTextField;
    // End of variables declaration//GEN-END:variables

}
